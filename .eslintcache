[{"/home/swaraj/React Project/side-effect-react-project/React-Hooks-Project/src/index.js":"1","/home/swaraj/React Project/side-effect-react-project/React-Hooks-Project/src/App.js":"2","/home/swaraj/React Project/side-effect-react-project/React-Hooks-Project/src/store/auth-contex.js":"3","/home/swaraj/React Project/side-effect-react-project/React-Hooks-Project/src/components/Home/Home.js":"4","/home/swaraj/React Project/side-effect-react-project/React-Hooks-Project/src/components/Login/Login.js":"5","/home/swaraj/React Project/side-effect-react-project/React-Hooks-Project/src/components/MainHeader/MainHeader.js":"6","/home/swaraj/React Project/side-effect-react-project/React-Hooks-Project/src/components/MainHeader/Navigation.js":"7","/home/swaraj/React Project/side-effect-react-project/React-Hooks-Project/src/components/UI/Button/Button.js":"8","/home/swaraj/React Project/side-effect-react-project/React-Hooks-Project/src/components/UI/Card/Card.js":"9","/home/swaraj/React Project/side-effect-react-project/React-Hooks-Project/src/components/UI/Input/Input.js":"10"},{"size":327,"mtime":1662398944843,"results":"11","hashOfConfig":"12"},{"size":1156,"mtime":1662404195843,"results":"13","hashOfConfig":"12"},{"size":1055,"mtime":1662399159263,"results":"14","hashOfConfig":"12"},{"size":453,"mtime":1662401729160,"results":"15","hashOfConfig":"12"},{"size":4031,"mtime":1662405072794,"results":"16","hashOfConfig":"12"},{"size":307,"mtime":1662147782916,"results":"17","hashOfConfig":"12"},{"size":1465,"mtime":1662381880516,"results":"18","hashOfConfig":"12"},{"size":353,"mtime":1648642446000,"results":"19","hashOfConfig":"12"},{"size":218,"mtime":1648642446000,"results":"20","hashOfConfig":"12"},{"size":980,"mtime":1662405243996,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1vk6q7n",{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26"},{"filePath":"27","messages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44"},"/home/swaraj/React Project/side-effect-react-project/React-Hooks-Project/src/index.js",[],"/home/swaraj/React Project/side-effect-react-project/React-Hooks-Project/src/App.js",["45","46"],"import React, { useState, useEffect, useContext } from 'react';\n\nimport Login from './components/Login/Login';\nimport Home from './components/Home/Home';\nimport MainHeader from './components/MainHeader/MainHeader';\nimport AuthContext from './store/auth-contex';\n\nfunction App() {\n\n  const ctx = useContext(AuthContext);\n  // const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n\n\n  // useEffect(() => {\n  //   const storedLoggedInUserInformation = localStorage.getItem(\"isLoggedIn\");\n\n  //   if (localStorage.getItem(\"isLoggedIn\") === \"1\") {\n  //     setIsLoggedIn(true);\n  //   }\n  // }, [])\n\n  // const loginHandler = (email, password) => {\n  //   // We should of course check email and password\n  //   // But it's just a dummy/ demo anyways\n  //   localStorage.setItem(\"isLoggedIn\", \"1\");\n  //   setIsLoggedIn(true);\n  // };\n\n  // const logoutHandler = () => {\n  //   setIsLoggedIn(false);\n  //   localStorage.removeItem(\"isLoggedIn\");\n  // };\n\n  return (\n    <React.Fragment>\n      <MainHeader />\n      <main>\n        {!ctx.isLoggedIn && <Login />}\n        {ctx.isLoggedIn && <Home />}\n      </main>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n ","/home/swaraj/React Project/side-effect-react-project/React-Hooks-Project/src/store/auth-contex.js",["47"],"import React, { useState, useEffect } from \"react\";\n\nconst AuthContext = React.createContext({\n    isLoggedIn: false,\n    onLogOut: () => { },\n    onLogIn: (email, password) => { },\n})\n\nexport const AuthContextProvider = (props) => {\n\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\n\n    useEffect(() => {\n        const storedLoggedInUserInformation = localStorage.getItem(\"isLoggedIn\");\n\n        if (localStorage.getItem(\"isLoggedIn\") === \"1\") {\n            setIsLoggedIn(true);\n        }\n    }, [])\n\n\n\n    const logoutHandler = () => {\n        localStorage.removeItem(\"isLoggedIn\");\n        setIsLoggedIn(false);\n    }\n    const loginHandler = () => {\n        localStorage.setItem(\"isLoggedIn\", \"1\");\n        setIsLoggedIn(true);\n    }\n\n    return (\n        <AuthContext.Provider\n            value={{\n                isLoggedIn: isLoggedIn,\n                onLogOut: logoutHandler,\n                onLogIn: loginHandler\n            }}\n        >\n            {props.children}\n        </AuthContext.Provider >\n    );\n}\n\nexport default AuthContext;","/home/swaraj/React Project/side-effect-react-project/React-Hooks-Project/src/components/Home/Home.js",[],"/home/swaraj/React Project/side-effect-react-project/React-Hooks-Project/src/components/Login/Login.js",[],"/home/swaraj/React Project/side-effect-react-project/React-Hooks-Project/src/components/MainHeader/MainHeader.js",[],"/home/swaraj/React Project/side-effect-react-project/React-Hooks-Project/src/components/MainHeader/Navigation.js",[],"/home/swaraj/React Project/side-effect-react-project/React-Hooks-Project/src/components/UI/Button/Button.js",[],"/home/swaraj/React Project/side-effect-react-project/React-Hooks-Project/src/components/UI/Card/Card.js",[],"/home/swaraj/React Project/side-effect-react-project/React-Hooks-Project/src/components/UI/Input/Input.js",["48"],"import React, { useRef, useEffect, useImperativeHandle } from \"react\";\n\nimport classes from \"./Input.module.css\";\n\nconst Input = React.forwardRef((props, ref) => {\n\n    const inputRef = useRef();\n\n    const activate = () => {\n        inputRef.current.focus();\n    }\n\n    // useEffect(() => {\n    //     inputRef.current.focus()\n    // }, []);\n\n    useImperativeHandle(ref, () => {\n        return (\n            {\n                focus: activate,\n            }\n        );\n\n\n    })\n\n    return (\n        <div\n            className={`${classes.control} ${props.isValid === false ? classes.invalid : ''\n                }`}\n        >\n            <label htmlFor={props.id}>{props.label}</label>\n            <input\n                ref={inputRef}\n                type={props.type}\n                id={props.id}\n                value={props.value}\n                onChange={props.onChange}\n                onBlur={props.onBlur}\n            />\n        </div>\n    );\n});\nexport default Input;",{"ruleId":"49","severity":1,"message":"50","line":1,"column":17,"nodeType":"51","messageId":"52","endLine":1,"endColumn":25},{"ruleId":"49","severity":1,"message":"53","line":1,"column":27,"nodeType":"51","messageId":"52","endLine":1,"endColumn":36},{"ruleId":"49","severity":1,"message":"54","line":14,"column":15,"nodeType":"51","messageId":"52","endLine":14,"endColumn":44},{"ruleId":"49","severity":1,"message":"53","line":1,"column":25,"nodeType":"51","messageId":"52","endLine":1,"endColumn":34},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'storedLoggedInUserInformation' is assigned a value but never used."]